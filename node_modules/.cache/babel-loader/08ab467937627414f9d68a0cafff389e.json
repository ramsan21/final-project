{"ast":null,"code":"var _jsxFileName = \"/Users/drk/Downloads/final-project/src/component/CustomizedTimeline.js\";\nimport React, { Component } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Timeline from \"@material-ui/lab/Timeline\";\nimport TimelineItem from \"@material-ui/lab/TimelineItem\";\nimport TimelineSeparator from \"@material-ui/lab/TimelineSeparator\";\nimport TimelineConnector from \"@material-ui/lab/TimelineConnector\";\nimport TimelineContent from \"@material-ui/lab/TimelineContent\";\nimport TimelineOppositeContent from \"@material-ui/lab/TimelineOppositeContent\";\nimport TimelineDot from \"@material-ui/lab/TimelineDot\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { PlayArrow, CheckCircleOutline, Stop, DoneOutline, Error } from \"@material-ui/icons\";\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    padding: \"6px 16px\"\n  },\n  secondaryTail: {\n    backgroundColor: theme.palette.secondary.main\n  }\n}));\nexport const timelineData = [{\n  task: \"Repave Ready\",\n  tasktime: \"30-03-2021 17:05:06 PM\"\n}, {\n  task: \"Repave In progress\",\n  tasktime: \"30-03-2021 17:05:06 PM\"\n}, {\n  task: \"DC Demo In Progress\",\n  tasktime: \"30-03-2021 17:05:06 PM\"\n}, {\n  task: \"Repave Completed\",\n  tasktime: \"30-03-2021 17:05:06 PM\"\n}, {\n  task: \"OSRE Pave In progress\",\n  tasktime: \"30-03-2021 17:05:06 PM\"\n}, {\n  task: \"OSRE Pave Completed\",\n  tasktime: \"30-03-2021 17:05:06 PM\"\n}, {\n  task: \"Repave Ready\",\n  tasktime: \"30-03-2021 17:05:06 PM\"\n}, {\n  task: \"Pave In Progress\",\n  tasktime: \"30-03-2021 17:05:06 PM\"\n}, {\n  task: \"DC Promo In progress\",\n  tasktime: \"30-03-2021 17:05:06 PM\"\n}, {\n  task: \"Post Promo In progress\",\n  tasktime: \"30-03-2021 17:05:06 PM\"\n}, {\n  task: \"Pave Completed\",\n  tasktime: \"30-03-2021 17:05:06 PM\"\n}];\nexport default function CustomizedTimeline() {\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(Timeline, {\n    align: \"alternate\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TimelineItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TimelineOppositeContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TimelineSeparator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TimelineDot, {\n    style: {\n      color: \"#fff\",\n      backgroundColor: \"#1B5E20\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(PlayArrow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(TimelineConnector, {\n    style: {\n      backgroundColor: \"#FF6D00\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(TimelineContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  })), timelineData.map((item, index) => /*#__PURE__*/React.createElement(TimelineItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TimelineOppositeContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, item.tasktime)), /*#__PURE__*/React.createElement(TimelineSeparator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TimelineDot, {\n    style: {\n      color: \"#00C853\",\n      backgroundColor: \"#fff\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(DoneOutline, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(TimelineConnector, {\n    style: {\n      backgroundColor: \"#FF6D00\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(TimelineContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    elevation: 3,\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    component: \"h1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 15\n    }\n  }, \"Step \", index + 1), /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 15\n    }\n  }, item.task))))), /*#__PURE__*/React.createElement(TimelineItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TimelineSeparator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TimelineDot, {\n    style: {\n      color: \"#fff\",\n      backgroundColor: \"#D50000\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Stop, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(TimelineContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/drk/Downloads/final-project/src/component/CustomizedTimeline.js"],"names":["React","Component","makeStyles","Timeline","TimelineItem","TimelineSeparator","TimelineConnector","TimelineContent","TimelineOppositeContent","TimelineDot","Paper","Typography","PlayArrow","CheckCircleOutline","Stop","DoneOutline","Error","useStyles","theme","paper","padding","secondaryTail","backgroundColor","palette","secondary","main","timelineData","task","tasktime","CustomizedTimeline","classes","color","map","item","index"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Timeline from \"@material-ui/lab/Timeline\";\nimport TimelineItem from \"@material-ui/lab/TimelineItem\";\nimport TimelineSeparator from \"@material-ui/lab/TimelineSeparator\";\nimport TimelineConnector from \"@material-ui/lab/TimelineConnector\";\nimport TimelineContent from \"@material-ui/lab/TimelineContent\";\nimport TimelineOppositeContent from \"@material-ui/lab/TimelineOppositeContent\";\nimport TimelineDot from \"@material-ui/lab/TimelineDot\";\n\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport {\n  PlayArrow,\n  CheckCircleOutline,\n  Stop,\n  DoneOutline,\n  Error\n} from \"@material-ui/icons\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: \"6px 16px\",\n  },\n  secondaryTail: {\n    backgroundColor: theme.palette.secondary.main,\n  },\n}));\n\nexport const timelineData = [\n  {\n    task: \"Repave Ready\",\n    tasktime: \"30-03-2021 17:05:06 PM\",\n  },\n  {\n    task: \"Repave In progress\",\n    tasktime: \"30-03-2021 17:05:06 PM\",\n  },\n  {\n    task: \"DC Demo In Progress\",\n    tasktime: \"30-03-2021 17:05:06 PM\",\n  },\n  {\n    task: \"Repave Completed\",\n    tasktime: \"30-03-2021 17:05:06 PM\",\n  },\n  {\n    task: \"OSRE Pave In progress\",\n    tasktime: \"30-03-2021 17:05:06 PM\",\n  },\n  {\n    task: \"OSRE Pave Completed\",\n    tasktime: \"30-03-2021 17:05:06 PM\",\n  },\n  {\n    task: \"Repave Ready\",\n    tasktime: \"30-03-2021 17:05:06 PM\",\n  },\n  {\n    task: \"Pave In Progress\",\n    tasktime: \"30-03-2021 17:05:06 PM\",\n  },\n  {\n    task: \"DC Promo In progress\",\n    tasktime: \"30-03-2021 17:05:06 PM\",\n  },\n  {\n    task: \"Post Promo In progress\",\n    tasktime: \"30-03-2021 17:05:06 PM\",\n  },\n  {\n    task: \"Pave Completed\",\n    tasktime: \"30-03-2021 17:05:06 PM\",\n  },\n];\n\nexport default function CustomizedTimeline() {\n  const classes = useStyles();\n\n  return (\n    <Timeline align=\"alternate\">\n      <TimelineItem>\n        <TimelineOppositeContent />\n        <TimelineSeparator>\n          <TimelineDot style={{ color: \"#fff\", backgroundColor: \"#1B5E20\" }}>\n            <PlayArrow />\n          </TimelineDot>\n          <TimelineConnector style={{ backgroundColor: \"#FF6D00\" }} />\n        </TimelineSeparator>\n        <TimelineContent></TimelineContent>\n      </TimelineItem>\n      {timelineData.map((item, index) => (\n        <TimelineItem>\n          <TimelineOppositeContent>\n            <Typography variant=\"body2\" color=\"textSecondary\">\n              {item.tasktime}\n            </Typography>\n          </TimelineOppositeContent>\n          <TimelineSeparator>\n            <TimelineDot style={{ color: \"#00C853\", backgroundColor: \"#fff\" }}>\n              <DoneOutline />\n            </TimelineDot>\n            <TimelineConnector style={{ backgroundColor: \"#FF6D00\" }} />\n          </TimelineSeparator>\n          <TimelineContent>\n            <Paper elevation={3} className={classes.paper}>\n              <Typography variant=\"h6\" component=\"h1\">\n                Step {index + 1}\n              </Typography>\n              <Typography>{item.task}</Typography>\n            </Paper>\n          </TimelineContent>\n        </TimelineItem>\n      ))}\n      <TimelineItem>\n        <TimelineSeparator>\n          <TimelineDot style={{ color: \"#fff\", backgroundColor: \"#D50000\" }}>\n            <Stop />\n          </TimelineDot>\n        </TimelineSeparator>\n        <TimelineContent />\n      </TimelineItem>\n    </Timeline>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}