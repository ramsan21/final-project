{"ast":null,"code":"var _jsxFileName = \"/Users/drk/Downloads/final-project/src/pages/GeneralSetup.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Box, Grid, MenuItem, Typography, Breadcrumbs, Link } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport MaterialTable from 'material-table';\nimport { makeStyles } from '@material-ui/core/styles';\nimport moment from 'moment';\nimport tableIcons, { options } from '../component/Universal/table_attributes';\nimport MROButton from '../component/FormComponents/Button';\nimport MROSelect from '../component/FormComponents/Select';\nconst useStyles = makeStyles(theme => ({\n  action: {\n    [theme.breakpoints.down('sm')]: {\n      flexDirection: 'column',\n      justifyContent: 'flex-start'\n    }\n  }\n}));\nexport const GeneralSetup = () => {\n  const [filter, setFilter] = useState();\n  const [dataList, setDataList] = useState(data);\n  useEffect(() => {\n    console.log('Table ', filter);\n\n    if (filter) {\n      let newDataList = data;\n      const {\n        forest,\n        domain,\n        dc_name\n      } = filter;\n\n      if (forest) {\n        newDataList = newDataList.filter(record => record.forest == forest);\n      }\n\n      if (domain) {\n        newDataList = newDataList.filter(record => record.domain == domain);\n      }\n\n      if (dc_name) {\n        newDataList = newDataList.filter(record => record.dc_name == dc_name);\n      }\n\n      console.log('data', newDataList);\n      setDataList(newDataList);\n    }\n  }, [filter]);\n  const tableOptions = { ...options,\n    search: false,\n    sorting: true,\n    filtering: true,\n    selection: true\n  };\n  const columns = [{\n    title: 'Forest',\n    field: 'forest',\n    lookup: constructObject(data.map(d => d.forest))\n  }, {\n    title: 'Domain',\n    field: 'domain',\n    lookup: constructObject(data.map(d => d.domain))\n  }, {\n    title: 'DataCenter',\n    field: 'd_center',\n    lookup: constructObject(data.map(d => d.d_center))\n  }, {\n    title: 'DCName',\n    field: 'dc_name',\n    lookup: constructObject(data.map(d => d.dc_name)),\n    render: rowData => rowData.dc_name\n  }, {\n    title: 'Last(Re)Paved',\n    field: 'last_paved',\n    render: rowData => moment(rowData.last_paved).format('DD-MM-YYYY')\n  }, {\n    title: 'Status',\n    field: 'status'\n  }];\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    minHeight: \"100vh\",\n    mt: 2,\n    p: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Filter, {\n    onFilter: f => setFilter(f),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(MaterialTable, {\n    title: \"\",\n    icons: tableIcons,\n    options: tableOptions,\n    columns: columns,\n    data: dataList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  })));\n};\n/* eslint-disable no-use-before-define */\n// export default function ComboBox() {\n//   return (\n//     <Autocomplete\n//       id=\"combo-box-demo\"\n//       options={top100Films}\n//       getOptionLabel={(option) => option.title}\n//       style={{ width: 300 }}\n//       renderInput={(params) => <TextField {...params} label=\"Combo box\" variant=\"outlined\" />}\n//     />\n//   );\n// } \n\nexport const Filter = ({\n  onFilter\n}) => {\n  const [filter, setFilter] = useState();\n  console.log(filter);\n  useEffect(() => {\n    onFilter(filter);\n  }, [filter]);\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    my: 2,\n    width: \"100%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Breadcrumbs, {\n    \"aria-label\": \"breadcrumb\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    color: \"textPrimary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 21\n    }\n  }, \"Cogent\"), /*#__PURE__*/React.createElement(Link, {\n    color: \"inherit\",\n    href: \"/generalSetup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 21\n    }\n  }, \"General Setup\")), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    alignItems: \"flex-start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    xs: 12,\n    md: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    pt: 0.5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 29\n    }\n  }, \"Filter :\"))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    xs: 12,\n    md: 8,\n    lg: 8,\n    spacing: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 3,\n    lg: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Autocomplete, {\n    id: \"combo-box-forest\",\n    onChange: (event, newValue, reason) => {\n      if (reason == 'clear') {\n        setFilter({ ...filter,\n          forest: ''\n        });\n      }\n\n      if (newValue && newValue.title) {\n        setFilter({ ...filter,\n          forest: newValue.title\n        });\n      }\n    },\n    options: data && data.map(item => {\n      return {\n        title: item.forest\n      };\n    }),\n    getOptionLabel: option => option.title,\n    renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n      label: \"Forest\",\n      variant: \"outlined\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 62\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 3,\n    lg: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Autocomplete, {\n    id: \"combo-box-domain\",\n    onChange: (event, newValue, reason) => {\n      if (reason == 'clear') {\n        setFilter({ ...filter,\n          domain: ''\n        });\n      }\n\n      if (newValue && newValue.title) {\n        setFilter({ ...filter,\n          domain: newValue.title\n        });\n      }\n    },\n    options: data && data.map(item => {\n      return {\n        title: item.domain\n      };\n    }),\n    getOptionLabel: option => option.title,\n    renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n      label: \"Domain\",\n      variant: \"outlined\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 62\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 3,\n    lg: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Autocomplete, {\n    id: \"combo-box-dc_name\",\n    onChange: (event, newValue, reason) => {\n      if (reason == 'clear') {\n        setFilter({ ...filter,\n          dc_name: ''\n        });\n      }\n\n      if (newValue && newValue.title) {\n        setFilter({ ...filter,\n          dc_name: newValue.title\n        });\n      }\n    },\n    options: data && data.map(item => {\n      return {\n        title: item.dc_name\n      };\n    }),\n    getOptionLabel: option => option.title,\n    renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n      label: \"DC Name\",\n      variant: \"outlined\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 62\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    xs: 12,\n    md: 3,\n    lg: 3,\n    justify: \"flex-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    justify: \"flex-end\",\n    className: classes.action,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(MROButton, {\n    variant: \"contained\",\n    color: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 29\n    }\n  }, \"Trigger Repave\"), /*#__PURE__*/React.createElement(Spacer, {\n    height: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(MROButton, {\n    variant: \"contained\",\n    color: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 29\n    }\n  }, \"Demote\"))))));\n};\nexport const Spacer = ({\n  height\n}) => {\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: height || '10px',\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 9\n    }\n  }));\n};\nexport const constructObject = arr => {\n  let obj = {};\n  arr.forEach((item, index) => {\n    obj[arr[index]] = arr[index];\n  });\n  return obj;\n};\nexport const data = Array.from(Array(10)).map((record, i) => ({\n  forest: `Forest-${i + 1}`,\n  domain: `Domain-${i + 1}`,\n  d_center: `Center-${(i + 1) * 10}`,\n  dc_name: `dcname${(i + 1) * 200}`,\n  owner: 'E123456',\n  progress: `${i + 1}/${i + 1 + 10}`,\n  request: `#${i + 1 + 50}`,\n  last_paved: Date.now(),\n  status: 'PaveCompleted',\n  reported_time: moment(Date.now()).format('DD-MM-YYYY HH:mm:ss A'),\n  failure_reason: 'Reason if any...',\n  dc_diag_check: `Check Name-${i + 1}`,\n  issuer: `Issuer name-${i + 1}`,\n  cert_name: `Cert Name-${i + 1}`,\n  restarted_by: 'E123456',\n  restarted_at: moment(Date.now()).format('DD-MM-YYYY HH:mm:ss A')\n}));","map":{"version":3,"sources":["/Users/drk/Downloads/final-project/src/pages/GeneralSetup.js"],"names":["React","useState","useEffect","Box","Grid","MenuItem","Typography","Breadcrumbs","Link","TextField","Autocomplete","MaterialTable","makeStyles","moment","tableIcons","options","MROButton","MROSelect","useStyles","theme","action","breakpoints","down","flexDirection","justifyContent","GeneralSetup","filter","setFilter","dataList","setDataList","data","console","log","newDataList","forest","domain","dc_name","record","tableOptions","search","sorting","filtering","selection","columns","title","field","lookup","constructObject","map","d","d_center","render","rowData","last_paved","format","f","Filter","onFilter","classes","event","newValue","reason","item","option","params","Spacer","height","width","arr","obj","forEach","index","Array","from","i","owner","progress","request","Date","now","status","reported_time","failure_reason","dc_diag_check","issuer","cert_name","restarted_by","restarted_at"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,QAApB,EAA8BC,UAA9B,EAA0CC,WAA1C,EAAuDC,IAAvD,QAAmE,mBAAnE;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,UAAP,IAAqBC,OAArB,QAAoC,yCAApC;AACA,OAAOC,SAAP,MAAsB,oCAAtB;AACA,OAAOC,SAAP,MAAsB,oCAAtB;AAEA,MAAMC,SAAS,GAAGN,UAAU,CAACO,KAAK,KAAK;AACnCC,EAAAA,MAAM,EAAE;AACJ,KAACD,KAAK,CAACE,WAAN,CAAkBC,IAAlB,CAAuB,IAAvB,CAAD,GAAgC;AAC5BC,MAAAA,aAAa,EAAE,QADa;AAE5BC,MAAAA,cAAc,EAAE;AAFY;AAD5B;AAD2B,CAAL,CAAN,CAA5B;AASA,OAAO,MAAMC,YAAY,GAAG,MAAM;AAC9B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsB1B,QAAQ,EAApC;AACA,QAAM,CAAC2B,QAAD,EAAWC,WAAX,IAA0B5B,QAAQ,CAAC6B,IAAD,CAAxC;AAEA5B,EAAAA,SAAS,CAAC,MAAM;AACZ6B,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBN,MAAtB;;AAEA,QAAIA,MAAJ,EAAY;AAER,UAAIO,WAAW,GAAGH,IAAlB;AAEA,YAAM;AAAEI,QAAAA,MAAF;AAAUC,QAAAA,MAAV;AAAkBC,QAAAA;AAAlB,UAA+BV,MAArC;;AAEA,UAAIQ,MAAJ,EAAY;AACRD,QAAAA,WAAW,GAAGA,WAAW,CAACP,MAAZ,CAAmBW,MAAM,IAAIA,MAAM,CAACH,MAAP,IAAiBA,MAA9C,CAAd;AACH;;AAED,UAAIC,MAAJ,EAAY;AACRF,QAAAA,WAAW,GAAGA,WAAW,CAACP,MAAZ,CAAmBW,MAAM,IAAIA,MAAM,CAACF,MAAP,IAAiBA,MAA9C,CAAd;AACH;;AAED,UAAIC,OAAJ,EAAa;AACTH,QAAAA,WAAW,GAAGA,WAAW,CAACP,MAAZ,CAAmBW,MAAM,IAAIA,MAAM,CAACD,OAAP,IAAkBA,OAA/C,CAAd;AACH;;AAEDL,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBC,WAApB;AACAJ,MAAAA,WAAW,CAACI,WAAD,CAAX;AACH;AACJ,GAxBQ,EAwBN,CAACP,MAAD,CAxBM,CAAT;AA0BA,QAAMY,YAAY,GAAG,EACjB,GAAGvB,OADc;AAEjBwB,IAAAA,MAAM,EAAE,KAFS;AAGjBC,IAAAA,OAAO,EAAE,IAHQ;AAIjBC,IAAAA,SAAS,EAAE,IAJM;AAKjBC,IAAAA,SAAS,EAAE;AALM,GAArB;AAQA,QAAMC,OAAO,GAAG,CACZ;AACIC,IAAAA,KAAK,EAAE,QADX;AAEIC,IAAAA,KAAK,EAAE,QAFX;AAGIC,IAAAA,MAAM,EAAEC,eAAe,CAACjB,IAAI,CAACkB,GAAL,CAASC,CAAC,IAAKA,CAAC,CAACf,MAAjB,CAAD;AAH3B,GADY,EAKT;AACCU,IAAAA,KAAK,EAAE,QADR;AAECC,IAAAA,KAAK,EAAE,QAFR;AAGCC,IAAAA,MAAM,EAAEC,eAAe,CAACjB,IAAI,CAACkB,GAAL,CAASC,CAAC,IAAKA,CAAC,CAACd,MAAjB,CAAD;AAHxB,GALS,EAUZ;AACIS,IAAAA,KAAK,EAAE,YADX;AAEIC,IAAAA,KAAK,EAAE,UAFX;AAGIC,IAAAA,MAAM,EAAEC,eAAe,CAACjB,IAAI,CAACkB,GAAL,CAASC,CAAC,IAAKA,CAAC,CAACC,QAAjB,CAAD;AAH3B,GAVY,EAeZ;AACIN,IAAAA,KAAK,EAAE,QADX;AAEIC,IAAAA,KAAK,EAAE,SAFX;AAGIC,IAAAA,MAAM,EAAEC,eAAe,CAACjB,IAAI,CAACkB,GAAL,CAASC,CAAC,IAAKA,CAAC,CAACb,OAAjB,CAAD,CAH3B;AAIIe,IAAAA,MAAM,EAAEC,OAAO,IAAIA,OAAO,CAAChB;AAJ/B,GAfY,EAqBZ;AACIQ,IAAAA,KAAK,EAAE,eADX;AAEIC,IAAAA,KAAK,EAAE,YAFX;AAGIM,IAAAA,MAAM,EAAEC,OAAO,IAAIvC,MAAM,CAACuC,OAAO,CAACC,UAAT,CAAN,CAA2BC,MAA3B,CAAkC,YAAlC;AAHvB,GArBY,EA0BZ;AACIV,IAAAA,KAAK,EAAE,QADX;AAEIC,IAAAA,KAAK,EAAE;AAFX,GA1BY,CAAhB;AAgCA,sBACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,SAAS,EAAC,OAAf;AAAuB,IAAA,EAAE,EAAE,CAA3B;AAA8B,IAAA,CAAC,EAAE,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAQ,IAAA,QAAQ,EAAEU,CAAC,IAAI5B,SAAS,CAAC4B,CAAD,CAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,aAAD;AACI,IAAA,KAAK,EAAC,EADV;AAEI,IAAA,KAAK,EAAEzC,UAFX;AAGI,IAAA,OAAO,EAAEwB,YAHb;AAII,IAAA,OAAO,EAAEK,OAJb;AAKI,IAAA,IAAI,EAAEf,QALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,CADJ;AAcH,CApFM;AAsFP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAM4B,MAAM,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AACpC,QAAM,CAAC/B,MAAD,EAASC,SAAT,IAAsB1B,QAAQ,EAApC;AACA8B,EAAAA,OAAO,CAACC,GAAR,CAAYN,MAAZ;AAEAxB,EAAAA,SAAS,CAAC,MAAM;AACZuD,IAAAA,QAAQ,CAAC/B,MAAD,CAAR;AACH,GAFQ,EAEN,CAACA,MAAD,CAFM,CAAT;AAIA,QAAMgC,OAAO,GAAGxC,SAAS,EAAzB;AAEA,sBACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAY,IAAA,KAAK,EAAC,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI,oBAAC,WAAD;AAAa,kBAAW,YAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAC,aAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAC,SAAZ;AAAsB,IAAA,IAAI,EAAC,eAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFJ,CAFJ,eASI,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,UAAU,EAAC,YAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,SAAS,MAApB;AAAqB,IAAA,EAAE,EAAE,EAAzB;AAA6B,IAAA,EAAE,EAAE,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,CADJ,CADJ,eAMI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,SAAS,MAApB;AAAqB,IAAA,EAAE,EAAE,EAAzB;AAA6B,IAAA,EAAE,EAAE,CAAjC;AAAoC,IAAA,EAAE,EAAE,CAAxC;AAA2C,IAAA,OAAO,EAAE,CAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAmB,IAAA,EAAE,EAAE,CAAvB;AAA0B,IAAA,EAAE,EAAE,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,YAAD;AACQ,IAAA,EAAE,EAAC,kBADX;AAEQ,IAAA,QAAQ,EAAE,CAACyC,KAAD,EAAQC,QAAR,EAAkBC,MAAlB,KAA6B;AACnC,UAAIA,MAAM,IAAI,OAAd,EAAuB;AACnBlC,QAAAA,SAAS,CAAC,EAAC,GAAGD,MAAJ;AAAYQ,UAAAA,MAAM,EAAE;AAApB,SAAD,CAAT;AACH;;AACD,UAAI0B,QAAQ,IAAIA,QAAQ,CAAChB,KAAzB,EAAgC;AAC5BjB,QAAAA,SAAS,CAAC,EAAC,GAAGD,MAAJ;AAAYQ,UAAAA,MAAM,EAAE0B,QAAQ,CAAChB;AAA7B,SAAD,CAAT;AACH;AACJ,KATT;AAUQ,IAAA,OAAO,EAAEd,IAAI,IAAIA,IAAI,CAACkB,GAAL,CAASc,IAAI,IAAI;AAC9B,aAAO;AACHlB,QAAAA,KAAK,EAAEkB,IAAI,CAAC5B;AADT,OAAP;AAGH,KAJgB,CAVzB;AAeQ,IAAA,cAAc,EAAG6B,MAAD,IAAYA,MAAM,CAACnB,KAf3C;AAiBQ,IAAA,WAAW,EAAGoB,MAAD,iBAAY,oBAAC,SAAD,oBAAeA,MAAf;AAAyB,MAAA,KAAK,EAAC,QAA/B;AAAwC,MAAA,OAAO,EAAC,UAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAjBjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,eAsBI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAmB,IAAA,EAAE,EAAE,CAAvB;AAA0B,IAAA,EAAE,EAAE,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,YAAD;AACQ,IAAA,EAAE,EAAC,kBADX;AAEQ,IAAA,QAAQ,EAAE,CAACL,KAAD,EAAQC,QAAR,EAAkBC,MAAlB,KAA6B;AACnC,UAAIA,MAAM,IAAI,OAAd,EAAuB;AACnBlC,QAAAA,SAAS,CAAC,EAAC,GAAGD,MAAJ;AAAYS,UAAAA,MAAM,EAAE;AAApB,SAAD,CAAT;AACH;;AACD,UAAIyB,QAAQ,IAAIA,QAAQ,CAAChB,KAAzB,EAAgC;AAC5BjB,QAAAA,SAAS,CAAC,EAAC,GAAGD,MAAJ;AAAYS,UAAAA,MAAM,EAAEyB,QAAQ,CAAChB;AAA7B,SAAD,CAAT;AACH;AACF,KATX;AAUQ,IAAA,OAAO,EAAEd,IAAI,IAAIA,IAAI,CAACkB,GAAL,CAASc,IAAI,IAAI;AAC9B,aAAO;AACHlB,QAAAA,KAAK,EAAEkB,IAAI,CAAC3B;AADT,OAAP;AAGH,KAJgB,CAVzB;AAeQ,IAAA,cAAc,EAAG4B,MAAD,IAAYA,MAAM,CAACnB,KAf3C;AAgBQ,IAAA,WAAW,EAAGoB,MAAD,iBAAY,oBAAC,SAAD,oBAAeA,MAAf;AAAuB,MAAA,KAAK,EAAC,QAA7B;AAAsC,MAAA,OAAO,EAAC,UAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAhBjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAtBJ,eA0CI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAmB,IAAA,EAAE,EAAE,CAAvB;AAA0B,IAAA,EAAE,EAAE,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,YAAD;AACQ,IAAA,EAAE,EAAC,mBADX;AAEQ,IAAA,QAAQ,EAAE,CAACL,KAAD,EAAQC,QAAR,EAAkBC,MAAlB,KAA6B;AACnC,UAAIA,MAAM,IAAI,OAAd,EAAuB;AACnBlC,QAAAA,SAAS,CAAC,EAAC,GAAGD,MAAJ;AAAYU,UAAAA,OAAO,EAAE;AAArB,SAAD,CAAT;AACH;;AACD,UAAIwB,QAAQ,IAAIA,QAAQ,CAAChB,KAAzB,EAAgC;AAC5BjB,QAAAA,SAAS,CAAC,EAAC,GAAGD,MAAJ;AAAYU,UAAAA,OAAO,EAAEwB,QAAQ,CAAChB;AAA9B,SAAD,CAAT;AACH;AACF,KATX;AAUQ,IAAA,OAAO,EAAEd,IAAI,IAAIA,IAAI,CAACkB,GAAL,CAASc,IAAI,IAAI;AAC9B,aAAO;AACHlB,QAAAA,KAAK,EAAEkB,IAAI,CAAC1B;AADT,OAAP;AAGH,KAJgB,CAVzB;AAeQ,IAAA,cAAc,EAAG2B,MAAD,IAAYA,MAAM,CAACnB,KAf3C;AAgBQ,IAAA,WAAW,EAAGoB,MAAD,iBAAY,oBAAC,SAAD,oBAAeA,MAAf;AAAuB,MAAA,KAAK,EAAC,SAA7B;AAAuC,MAAA,OAAO,EAAC,UAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAhBjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CA1CJ,CANJ,eAgFI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,SAAS,MAApB;AAAqB,IAAA,EAAE,EAAE,EAAzB;AAA6B,IAAA,EAAE,EAAE,CAAjC;AAAoC,IAAA,EAAE,EAAE,CAAxC;AAA2C,IAAA,OAAO,EAAC,UAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,SAAS,MAApB;AAAqB,IAAA,OAAO,EAAC,UAA7B;AAAwC,IAAA,SAAS,EAAEN,OAAO,CAACtC,MAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AAAW,IAAA,OAAO,EAAC,WAAnB;AAA+B,IAAA,KAAK,EAAC,WAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI,oBAAC,MAAD;AAAQ,IAAA,MAAM,EAAE,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAGI,oBAAC,SAAD;AAAW,IAAA,OAAO,EAAC,WAAnB;AAA+B,IAAA,KAAK,EAAC,WAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,CADJ,CAhFJ,CATJ,CADJ,CADJ;AAuGH,CAjHM;AAmHP,OAAO,MAAM6C,MAAM,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgB;AAClC,sBAAQ,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACJ;AAAK,IAAA,KAAK,EAAE;AAAEA,MAAAA,MAAM,EAAEA,MAAM,IAAI,MAApB;AAA4BC,MAAAA,KAAK,EAAE;AAAnC,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADI,CAAR;AAIH,CALM;AAOP,OAAO,MAAMpB,eAAe,GAAGqB,GAAG,IAAI;AAClC,MAAIC,GAAG,GAAG,EAAV;AACAD,EAAAA,GAAG,CAACE,OAAJ,CAAY,CAACR,IAAD,EAAOS,KAAP,KAAiB;AACzBF,IAAAA,GAAG,CAACD,GAAG,CAACG,KAAD,CAAJ,CAAH,GAAkBH,GAAG,CAACG,KAAD,CAArB;AACH,GAFD;AAGA,SAAOF,GAAP;AACH,CANM;AAQP,OAAO,MAAMvC,IAAI,GAAG0C,KAAK,CAACC,IAAN,CAAWD,KAAK,CAAC,EAAD,CAAhB,EAAsBxB,GAAtB,CAA0B,CAACX,MAAD,EAASqC,CAAT,MAAgB;AAC1DxC,EAAAA,MAAM,EAAG,UAASwC,CAAC,GAAG,CAAE,EADkC;AAE1DvC,EAAAA,MAAM,EAAG,UAASuC,CAAC,GAAG,CAAE,EAFkC;AAG1DxB,EAAAA,QAAQ,EAAG,UAAS,CAACwB,CAAC,GAAG,CAAL,IAAU,EAAG,EAHyB;AAI1DtC,EAAAA,OAAO,EAAG,SAAQ,CAACsC,CAAC,GAAG,CAAL,IAAU,GAAI,EAJ0B;AAK1DC,EAAAA,KAAK,EAAE,SALmD;AAM1DC,EAAAA,QAAQ,EAAG,GAAEF,CAAC,GAAG,CAAE,IAAIA,CAAC,GAAG,CAAL,GAAU,EAAG,EANuB;AAO1DG,EAAAA,OAAO,EAAG,IAAIH,CAAC,GAAG,CAAL,GAAU,EAAG,EAPgC;AAQ1DrB,EAAAA,UAAU,EAAEyB,IAAI,CAACC,GAAL,EAR8C;AAS1DC,EAAAA,MAAM,EAAE,eATkD;AAU1DC,EAAAA,aAAa,EAAEpE,MAAM,CAACiE,IAAI,CAACC,GAAL,EAAD,CAAN,CAAmBzB,MAAnB,CAA0B,uBAA1B,CAV2C;AAW1D4B,EAAAA,cAAc,EAAE,kBAX0C;AAY1DC,EAAAA,aAAa,EAAG,cAAaT,CAAC,GAAG,CAAE,EAZuB;AAa1DU,EAAAA,MAAM,EAAG,eAAcV,CAAC,GAAG,CAAE,EAb6B;AAc1DW,EAAAA,SAAS,EAAG,aAAYX,CAAC,GAAG,CAAE,EAd4B;AAe1DY,EAAAA,YAAY,EAAE,SAf4C;AAgB1DC,EAAAA,YAAY,EAAE1E,MAAM,CAACiE,IAAI,CAACC,GAAL,EAAD,CAAN,CAAmBzB,MAAnB,CAA0B,uBAA1B;AAhB4C,CAAhB,CAA1B,CAAb","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Box, Grid, MenuItem, Typography, Breadcrumbs, Link } from '@material-ui/core' \nimport TextField from '@material-ui/core/TextField'; \nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport MaterialTable from 'material-table';\nimport { makeStyles } from '@material-ui/core/styles';\nimport moment from 'moment';\nimport tableIcons, { options } from '../component/Universal/table_attributes';\nimport MROButton from '../component/FormComponents/Button';\nimport MROSelect from '../component/FormComponents/Select';\n\nconst useStyles = makeStyles(theme => ({\n    action: {\n        [theme.breakpoints.down('sm')]: {\n            flexDirection: 'column',\n            justifyContent: 'flex-start'\n        }\n    }\n}));\n\nexport const GeneralSetup = () => {\n    const [filter, setFilter] = useState()\n    const [dataList, setDataList] = useState(data)\n    \n    useEffect(() => {\n        console.log('Table ', filter)\n\n        if (filter) {\n\n            let newDataList = data\n\n            const { forest, domain, dc_name, } = filter\n               \n            if (forest) {\n                newDataList = newDataList.filter(record => record.forest == forest)\n            }\n\n            if (domain) {\n                newDataList = newDataList.filter(record => record.domain == domain)\n            }\n\n            if (dc_name) {\n                newDataList = newDataList.filter(record => record.dc_name == dc_name)\n            }\n\n            console.log('data', newDataList)\n            setDataList(newDataList)\n        }\n    }, [filter])\n\n    const tableOptions = {\n        ...options,\n        search: false,\n        sorting: true,\n        filtering: true,\n        selection: true,\n    };\n\n    const columns = [\n        {\n            title: 'Forest',\n            field: 'forest',\n            lookup: constructObject(data.map(d => (d.forest))),\n        }, {\n            title: 'Domain',\n            field: 'domain',\n            lookup: constructObject(data.map(d => (d.domain))),\n        },\n        {\n            title: 'DataCenter',\n            field: 'd_center',\n            lookup: constructObject(data.map(d => (d.d_center))),\n        },\n        {\n            title: 'DCName',\n            field: 'dc_name',\n            lookup: constructObject(data.map(d => (d.dc_name))),\n            render: rowData => rowData.dc_name,\n        },\n        {\n            title: 'Last(Re)Paved',\n            field: 'last_paved',\n            render: rowData => moment(rowData.last_paved).format('DD-MM-YYYY'),\n        },\n        {\n            title: 'Status',\n            field: 'status',\n        }\n    ]\n\n    return (\n        <React.Fragment>\n            <Box minHeight=\"100vh\" mt={2} p={2} >\n                <Filter onFilter={f => setFilter(f)} />\n                <MaterialTable\n                    title=\"\"\n                    icons={tableIcons}\n                    options={tableOptions}\n                    columns={columns}\n                    data={dataList}\n                />\n            </Box>\n        </React.Fragment>\n    )\n}\n\n/* eslint-disable no-use-before-define */\n// export default function ComboBox() {\n//   return (\n//     <Autocomplete\n//       id=\"combo-box-demo\"\n//       options={top100Films}\n//       getOptionLabel={(option) => option.title}\n//       style={{ width: 300 }}\n//       renderInput={(params) => <TextField {...params} label=\"Combo box\" variant=\"outlined\" />}\n//     />\n//   );\n// } \n\nexport const Filter = ({ onFilter }) => {\n    const [filter, setFilter] = useState()\n    console.log(filter)\n\n    useEffect(() => {\n        onFilter(filter)\n    }, [filter])\n\n    const classes = useStyles(); \n\n    return (\n        <React.Fragment>\n            <Box my={2} width=\"100%\">\n\n                <Breadcrumbs aria-label=\"breadcrumb\">\n                    <Typography color=\"textPrimary\">Cogent</Typography>\n                    <Link color=\"inherit\" href=\"/generalSetup\" >\n                      General Setup\n                    </Link>  \n                </Breadcrumbs>\n\n                <Grid container alignItems=\"flex-start\">\n                    <Grid item container xs={12} md={1}>\n                        <Box pt={0.5}>\n                            <Typography variant=\"subtitle2\">Filter :</Typography>\n                        </Box>\n                    </Grid>\n                    <Grid item container xs={12} md={8} lg={8} spacing={1}>\n                        <Grid item xs={12} md={3} lg={3}>\n                            <Autocomplete\n                                    id=\"combo-box-forest\" \n                                    onChange={(event, newValue, reason) => {\n                                        if (reason == 'clear') {\n                                            setFilter({...filter, forest: '' })\n                                        }\n                                        if (newValue && newValue.title) {\n                                            setFilter({...filter, forest: newValue.title })\n                                        }\n                                    }}\n                                    options={data && data.map(item => {\n                                        return {\n                                            title: item.forest\n                                        }\n                                    })}\n                                    getOptionLabel={(option) => option.title}\n                                    \n                                    renderInput={(params) => <TextField {...params}   label=\"Forest\" variant=\"outlined\" />}\n                                /> \n                        </Grid>\n                        <Grid item xs={12} md={3} lg={3}>\n                            <Autocomplete\n                                    id=\"combo-box-domain\" \n                                    onChange={(event, newValue, reason) => {\n                                        if (reason == 'clear') {\n                                            setFilter({...filter, domain: '' })\n                                        }\n                                        if (newValue && newValue.title) {\n                                            setFilter({...filter, domain: newValue.title })\n                                        }\n                                      }}\n                                    options={data && data.map(item => {\n                                        return {\n                                            title: item.domain\n                                        }\n                                    })}\n                                    getOptionLabel={(option) => option.title} \n                                    renderInput={(params) => <TextField {...params} label=\"Domain\" variant=\"outlined\" />}\n                                /> \n                        </Grid>\n                        <Grid item xs={12} md={3} lg={3}>\n                            <Autocomplete\n                                    id=\"combo-box-dc_name\" \n                                    onChange={(event, newValue, reason) => { \n                                        if (reason == 'clear') {\n                                            setFilter({...filter, dc_name: '' })\n                                        }\n                                        if (newValue && newValue.title) {\n                                            setFilter({...filter, dc_name: newValue.title })\n                                        }\n                                      }}\n                                    options={data && data.map(item => {\n                                        return {\n                                            title: item.dc_name\n                                        }\n                                    })}\n                                    getOptionLabel={(option) => option.title} \n                                    renderInput={(params) => <TextField {...params} label=\"DC Name\" variant=\"outlined\" />}\n                            /> \n                        </Grid>\n                        {/* <Grid item xs={12} md={2} lg={1}>\n                            <MROSelect\n                                name={\"dc_name\"}\n                                label={\"DC Name\"}\n                                multiple\n                            >\n                                {data && data.map(item => <MenuItem key={item.dc_name} value={item.dc_name}>\n                                    {item.dc_name}\n                                </MenuItem>)}\n                            </MROSelect>\n                        </Grid> */}\n                    </Grid>\n                    <Grid item container xs={12} md={3} lg={3} justify=\"flex-end\">\n                        <Grid item container justify=\"flex-end\" className={classes.action}>\n                            <MROButton variant=\"contained\" color=\"secondary\">Trigger Repave</MROButton>\n                            <Spacer height={10} />\n                            <MROButton variant=\"contained\" color=\"secondary\">Demote</MROButton>\n                        </Grid>\n                    </Grid>\n                </Grid>\n\n            </Box>\n        </React.Fragment>\n    )\n}\n\nexport const Spacer = ({ height }) => {\n    return (<React.Fragment>\n        <div style={{ height: height || '10px', width: '100%' }}>\n        </div>\n    </React.Fragment>)\n}\n\nexport const constructObject = arr => {\n    let obj = {};\n    arr.forEach((item, index) => {\n        obj[arr[index]] = arr[index]\n    })\n    return obj;\n};\n\nexport const data = Array.from(Array(10)).map((record, i) => ({\n    forest: `Forest-${i + 1}`,\n    domain: `Domain-${i + 1}`,\n    d_center: `Center-${(i + 1) * 10}`,\n    dc_name: `dcname${(i + 1) * 200}`,\n    owner: 'E123456',\n    progress: `${i + 1}/${(i + 1) + 10}`,\n    request: `#${(i + 1) + 50}`,\n    last_paved: Date.now(),\n    status: 'PaveCompleted',\n    reported_time: moment(Date.now()).format('DD-MM-YYYY HH:mm:ss A'),\n    failure_reason: 'Reason if any...',\n    dc_diag_check: `Check Name-${i + 1}`,\n    issuer: `Issuer name-${i + 1}`,\n    cert_name: `Cert Name-${i + 1}`,\n    restarted_by: 'E123456',\n    restarted_at: moment(Date.now()).format('DD-MM-YYYY HH:mm:ss A'),\n}))\n\n"]},"metadata":{},"sourceType":"module"}